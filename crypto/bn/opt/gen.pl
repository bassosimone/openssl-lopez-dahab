#!/usr/bin/perl

$BASEDIR = "/home/dani/workspace/cryptogen-old/cryptogen";	# The cryptogen base directory.
$CRYPTOGEN = "$BASEDIR/cryptogen";							# The cryptogen executable.
$F2NDIR = "$BASEDIR/plugins/f2n/.libs";						# The binary fields plugins directory.
$UTILDIR = "$BASEDIR/plugins/utility/.libs";				# The utility plugins directory.

sub GenerateCode($$$$$);
sub GenerateField($$$);
sub GenerateSimpleField($$$$);

GenerateField(163, "163,7,6,3,0", "0b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011001001");
GenerateField(233, "233,74,0", "0b0000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000001");
GenerateField(283, "283,74,0", "0b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000010100001");
GenerateField(409, "409,87,0", "0b0000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000001");
GenerateField(571, "571,10,5,2,0", "0b000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000100101");

#0000100000000000000000000000000000000000000000000000000000000000
#0000000000000000000000000000000000000000000000000000000000000000
#0000000000000000000000000000000000000000000000000000000000000000
#0000000000000000000000000000000000000000000000000000000000000000
#0000000000000000000000000000000000000000000000000000000000000000
#0000000000000000000000000000000000000000000000000000000000000000
#0000000000000000000000000000000000000000000000000000000000000000
#0000000000000000000000000000000000000000000000000000000000000000
#0000000000000000000000000000000000000000000000000000010000100101

my @Headers = split('\n', `find 32bit | grep .h`);
my $Header = "#include \"" . join("\"\n#include \"", @Headers) . "\"\n";
my @Headers = split('\n', `find 64bit | grep .h`);
$Header .= "#include \"" . join("\"\n#include \"", @Headers) . "\"\n";
open($File, ">", "all.h");
print $File $Header;

# $_[0]: The field degree.
# $_[1]: The exponents.
# $_[2]: The bitvector reductor.
sub GenerateField($$$)
{
	GenerateSimpleField(32, $_[0], $_[1], $_[2]);
	GenerateSimpleField(64, $_[0], $_[1], $_[2]);
}

# $_[0]: 32 or 64.
# $_[1]: The field degree.
# $_[2]: The exponents.
# $_[3]: The bitvector reductor.
sub GenerateSimpleField($$$$)
{
	my $SquareWindow = 4;
	my @CombWindows = (3, 4, 5);
	my $MSBWindow = 8;
	
	GenerateCode($_[0], $_[1], "add_$_[1]", "f2n-sum:$_[1]", $F2NDIR);
	GenerateCode($_[0], $_[1], "mod_$_[1]", "f2n-reduce:$_[2]", $F2NDIR);
	GenerateCode($_[0], $_[1], "sqr_$_[1]", "f2n-square:$_[1],$SquareWindow", $F2NDIR);
	foreach $i(@CombWindows)
	{
		GenerateCode($_[0], $_[1], "comb" . $i . "_$_[1]", "f2n-comb:$_[1],$i", $F2NDIR);
		$j = int($_[1] / 2);
		++$j if ($j != $_[1] / 2); 		
		GenerateCode($_[0], $_[1], "combx" . $i . "_$_[1]", "f2n-comb:$j,$i", $F2NDIR);		
		GenerateCode($_[0], $_[1], "kar" . $i . "_$_[1]",
			"f2n-karatsuba:$_[1],$j,combx" . $i . "_$_[1]_$_[0],combx" . $i . "_$_[1].h", $F2NDIR);		
	}
	GenerateCode($_[0], $_[1], "msb_$_[1]", "bitvector-getmsb:" . ($_[1] + 1) . ",$MSBWindow", $UTILDIR);
	GenerateCode($_[0], $_[1], "inv_$_[1]", "f2n-invert:$_[1],$_[3],msb_$_[1]_$_[0],msb_$_[1].h", $F2NDIR);
}

# $_[0]: 32 or 64.
# $_[1]: The field degree
# $_[2]: The function name.
# $_[3]: The plugin name and parameters.
# $_[4]: The plugin directory.
sub GenerateCode($$$$$)
{
	my $Dir = $_[0] . "bit/f" . $_[1];	# The output directory.
	
	system("$CRYPTOGEN --plugin-dir=$_[4] --output-source=$Dir/$_[2].c --output-header=$Dir/$_[2].h " .
		"--routine-name=$_[2]_$_[0] --language=c --processor=generic$_[0] $_[3]");
}
